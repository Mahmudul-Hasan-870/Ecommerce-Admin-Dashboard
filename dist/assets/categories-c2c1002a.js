import{d as g}from"./vendor-513bb039.js";import{a as o}from"./index-713483bf.js";import{b as h,s as c,a as n,c as u}from"./toast-489a8a13.js";const p=g("categories",{state:()=>({categories:[],categoryTree:[],selectedCategory:null,loading:!1,error:null,stats:{total:0,active:0,inactive:0,parent:0,sub:0}}),getters:{activeCategories:t=>t.categories.filter(e=>e.isActive),parentCategories:t=>t.categories.filter(e=>!e.parent),subCategories:t=>t.categories.filter(e=>e.parent),getCategoryById:t=>e=>t.categories.find(r=>r._id===e),getCategoryPath:t=>e=>{const r=t.categories.find(i=>i._id===e);if(!r)return[];const s=[r];let a=r;for(;a.parent;){const i=t.categories.find(l=>l._id===a.parent._id||l._id===a.parent);if(i)s.unshift(i),a=i;else break}return s}},actions:{async fetchCategories(t={}){var e,r;this.loading=!0,this.error=null;try{const s=await o.get("/categories",{params:t});return this.categories=s.data,{success:!0}}catch(s){return this.error=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to fetch categories",{success:!1,error:this.error}}finally{this.loading=!1}},async fetchCategoryTree(t={}){var e,r;this.loading=!0,this.error=null;try{const s=await o.get("/categories/tree",{params:t});return this.categoryTree=s.data,{success:!0}}catch(s){return this.error=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to fetch category tree",{success:!1,error:this.error}}finally{this.loading=!1}},async fetchCategory(t){var e,r;this.loading=!0,this.error=null;try{const s=await o.get(`/categories/${t}`);return this.selectedCategory=s.data,{success:!0}}catch(s){return this.error=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to fetch category",{success:!1,error:this.error}}finally{this.loading=!1}},async createCategory(t){var e,r;this.loading=!0,this.error=null;try{return await o.post("/categories",t),h("Category"),await this.fetchCategories(),await this.fetchCategoryStats(),{success:!0}}catch(s){return this.error=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to create category",c("Create Category",this.error),{success:!1,error:this.error}}finally{this.loading=!1}},async updateCategory(t,e){var r,s;this.loading=!0,this.error=null;try{return await o.put(`/categories/${t}`,e),n("Category"),await this.fetchCategories(),await this.fetchCategoryStats(),{success:!0}}catch(a){return this.error=((s=(r=a.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to update category",c("Update Category",this.error),{success:!1,error:this.error}}finally{this.loading=!1}},async deleteCategory(t){var e,r;this.loading=!0,this.error=null;try{return await o.delete(`/categories/${t}`),u("Category"),await this.fetchCategories(),await this.fetchCategoryStats(),{success:!0}}catch(s){return this.error=((r=(e=s.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to delete category",c("Delete Category",this.error),{success:!1,error:this.error}}finally{this.loading=!1}},async bulkUpdate(t,e,r={}){var s,a;this.loading=!0,this.error=null;try{return await o.post("/categories/bulk",{ids:t,action:e,data:r}),n("Categories"),await this.fetchCategories(),await this.fetchCategoryStats(),{success:!0}}catch(i){return this.error=((a=(s=i.response)==null?void 0:s.data)==null?void 0:a.message)||"Failed to perform bulk operation",c("Bulk Update",this.error),{success:!1,error:this.error}}finally{this.loading=!1}},async fetchCategoryStats(){var t,e;try{const r=await o.get("/categories/stats");return this.stats=r.data,{success:!0}}catch(r){return this.error=((e=(t=r.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to fetch category statistics",{success:!1,error:this.error}}},clearSelectedCategory(){this.selectedCategory=null},setSelectedCategory(t){this.selectedCategory=t}}});export{p as u};
